[project]
name = "twin"
dynamic = ["version"]
description = "Twin is a Python library that creates perfect copies of your objects along with all their relationships. "
readme = "README.md"
authors = [
    { name = "Patrick" }
]
requires-python = ">=3.9"
dependencies = []
keywords = ["clone", "copy", "deepcopy", "relations", "instances"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]

[project.scripts]
twin = "twin:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=5.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "bump2version>=1.0",
    "safety>=2.0",
    "bandit>=1.7",
]

[project.urls]
Homepage = "https://github.com/FlyingBird95/twin"
Documentation = "https://github.com/FlyingBird95/twin#readme"
Repository = "https://github.com/FlyingBird95/twin.git"
"Bug Tracker" = "https://github.com/FlyingBird95/twin/issues"

[tool.hatch.version]
path = "src/twin/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/twin"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=twin --cov-report=term-missing"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.bump2version]
current_version = "0.1.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"

[[tool.bump2version.files]]
filename = "src/twin/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bump2version.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""
